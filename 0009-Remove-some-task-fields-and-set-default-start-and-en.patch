From b31b3b9ac2d1390a8e1395f48a2ee7e9c7d66d0e Mon Sep 17 00:00:00 2001
From: Francesco Ongaro <francesco.ongaro@isgroup.it>
Date: Sat, 24 May 2025 16:27:14 +0200
Subject: [PATCH] Remove some task fields and set default start and end time
 for tasks (simpler UI)

---
 app/Template/task_creation/show.php     | 25 +++++++++++++++------
 app/Template/task_modification/show.php | 29 +++++++++++++++----------
 2 files changed, 36 insertions(+), 18 deletions(-)

diff --git a/app/Template/task_creation/show.php b/app/Template/task_creation/show.php
index e869daa..977a828 100644
--- a/app/Template/task_creation/show.php
+++ b/app/Template/task_creation/show.php
@@ -19,19 +19,30 @@
             <?= $this->task->renderAssigneeField($users_list, $values, $errors) ?>
             <?= $this->task->renderCategoryField($categories_list, $values, $errors) ?>
             <?= $this->task->renderSwimlaneField($swimlanes_list, $values, $errors) ?>
-            <?= $this->task->renderColumnField($columns_list, $values, $errors) ?>
-            <?= $this->task->renderPriorityField($project, $values) ?>
 
             <?= $this->hook->render('template:task:form:second-column', array('values' => $values, 'errors' => $errors)) ?>
         </div>
 
         <div class="task-form-secondary-column">
-            <?= $this->task->renderDueDateField($values, $errors) ?>
+            <?php 
+            // Imposta l'ora di default a 09:30 se non è già impostata
+            if (!isset($values['date_started']) || empty($values['date_started'])) {
+                // Usa il formato data e ora dell'applicazione
+                $dateFormat = $this->app->dateParser->getUserDateFormat();
+                $timeFormat = $this->app->dateParser->getUserTimeFormat();
+                $values['date_started'] = date($dateFormat).' '.date('H:i', strtotime('09:30'));
+            }
+            
+            // Imposta l'ora di default a 18:30 per la data di scadenza se non è già impostata
+            if (!isset($values['date_due']) || empty($values['date_due'])) {
+                // Usa il formato data dell'applicazione
+                $dateFormat = $this->app->dateParser->getUserDateFormat();
+                $timeFormat = $this->app->dateParser->getUserTimeFormat();
+                $values['date_due'] = date($dateFormat).' '.date('H:i', strtotime('18:30'));
+            }
+            ?>
             <?= $this->task->renderStartDateField($values, $errors) ?>
-            <?= $this->task->renderTimeEstimatedField($values, $errors) ?>
-            <?= $this->task->renderTimeSpentField($values, $errors) ?>
-            <?= $this->task->renderScoreField($values, $errors) ?>
-            <?= $this->task->renderReferenceField($values, $errors) ?>
+            <?= $this->task->renderDueDateField($values, $errors) ?>
 
             <?= $this->hook->render('template:task:form:third-column', array('values' => $values, 'errors' => $errors)) ?>
         </div>
diff --git a/app/Template/task_modification/show.php b/app/Template/task_modification/show.php
index 1b6ffaa..7ecce64 100644
--- a/app/Template/task_modification/show.php
+++ b/app/Template/task_modification/show.php
@@ -9,28 +9,35 @@
             <?= $this->task->renderTitleField($values, $errors) ?>
             <?= $this->task->renderDescriptionField($values, $errors) ?>
             <?= $this->task->renderDescriptionTemplateDropdown($project['id']) ?>
-            <?= $this->task->renderTagField($project, $tags) ?>
-
             <?= $this->hook->render('template:task:form:first-column', array('values' => $values, 'errors' => $errors)) ?>
         </div>
 
         <div class="task-form-secondary-column">
             <?= $this->task->renderColorField($values) ?>
             <?= $this->task->renderAssigneeField($users_list, $values, $errors) ?>
-            <?= $this->task->renderCategoryField($categories_list, $values, $errors) ?>
-            <?= $this->task->renderPriorityField($project, $values) ?>
-
             <?= $this->hook->render('template:task:form:second-column', array('values' => $values, 'errors' => $errors)) ?>
         </div>
 
         <div class="task-form-secondary-column">
-            <?= $this->task->renderDueDateField($values, $errors) ?>
+            <?php 
+            // Imposta l'ora di default a 09:30 se non è già impostata
+            if (!isset($values['date_started']) || empty($values['date_started'])) {
+                // Usa il formato data e ora dell'applicazione
+                $dateFormat = $this->app->dateParser->getUserDateFormat();
+                $timeFormat = $this->app->dateParser->getUserTimeFormat();
+                $values['date_started'] = date($dateFormat).' '.date('H:i', strtotime('09:30'));
+            }
+            
+            // Imposta l'ora di default a 18:30 per la data di scadenza se non è già impostata
+            if (!isset($values['date_due']) || empty($values['date_due'])) {
+                // Usa il formato data dell'applicazione
+                $dateFormat = $this->app->dateParser->getUserDateFormat();
+                $timeFormat = $this->app->dateParser->getUserTimeFormat();
+                $values['date_due'] = date($dateFormat).' '.date('H:i', strtotime('18:30'));
+            }
+            ?>
             <?= $this->task->renderStartDateField($values, $errors) ?>
-            <?= $this->task->renderTimeEstimatedField($values, $errors) ?>
-            <?= $this->task->renderTimeSpentField($values, $errors) ?>
-            <?= $this->task->renderScoreField($values, $errors) ?>
-            <?= $this->task->renderReferenceField($values, $errors) ?>
-
+            <?= $this->task->renderDueDateField($values, $errors) ?>
             <?= $this->hook->render('template:task:form:third-column', array('values' => $values, 'errors' => $errors)) ?>
         </div>
 
-- 
2.43.0

